name: Mirror Update

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  check_for_updates:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.check.outputs.changes }}
    steps:
      - name: Checkout repository
        run: |
          git clone -b workflow https://$GH_PAT@github.com/twinysam/ubuntu-wallpapers.git workflow-repo
          cd workflow-repo
          git remote add upstream https://git.launchpad.net/ubuntu/+source/ubuntu-wallpapers
          git fetch upstream
          latest_branch=$(git for-each-ref --sort=-committerdate refs/remotes/upstream/ --format='%(refname:short)' | head -n 1 | sed 's|upstream/||')
          echo "latest_branch is $latest_branch"
          latest_commit_date=$(git log -1 --format=%ct upstream/$latest_branch)
          echo "latest_commit_date=$latest_commit_date" >> $GITHUB_ENV
          latest_mirror_commit_date=$(git log -1 --format=%ct)
          echo "latest_mirror_commit_date=$latest_mirror_commit_date" >> $GITHUB_ENV
          if [ "$latest_commit_date" -gt "$latest_mirror_commit_date" ]; then
            echo "Changes detected"
            echo "changes=true" >> $GITHUB_ENV
          else
            echo "No changes found"
            echo "changes=false" >> $GITHUB_ENV
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

  update_mirror:
    needs: check_for_updates
    if: needs.check_for_updates.outputs.changes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        run: |
          git clone https://$GH_PAT@github.com/twinysam/ubuntu-wallpapers.git repo
          cd repo
          git config --global user.email "twinysam@gmail.com"
          git config --global user.name "twinysam"
          git remote add upstream https://git.launchpad.net/ubuntu/+source/ubuntu-wallpapers
          git fetch upstream
          for branch in $(git branch -r | grep upstream/ | sed 's/upstream\///'); do
              git checkout -b $branch upstream/$branch || true
          done
          latest_branch=$(git for-each-ref --sort=-committerdate refs/remotes/upstream/ --format='%(refname:short)' | head -n 1)
          echo "latest_branch is $latest_branch"
          echo "latest_branch=$latest_branch" >> $GITHUB_ENV
          git checkout $latest_branch
          git push origin $latest_branch
          git push --mirror origin
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      - name: Set default branch
        run: |
          latest_branch=${{ env.latest_branch }}
          echo "Setting default branch to $latest_branch"
          curl -X PATCH -H "Authorization: token $GH_PAT" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/twinysam/ubuntu-wallpapers -d "{\"default_branch\":\"$latest_branch\"}"
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
